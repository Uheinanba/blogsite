(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{69:function(t,a,r){"use strict";r.r(a);var e=r(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"react-standard"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react-standard","aria-hidden":"true"}},[t._v("#")]),t._v(" React-standard")]),r("h2",{attrs:{id:"简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#简介","aria-hidden":"true"}},[t._v("#")]),t._v(" 简介")]),r("p",[t._v("面向对象语言的问题是，它们永远都要随身携带哪些隐式的环境。")]),r("h3",{attrs:{id:"案例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#案例","aria-hidden":"true"}},[t._v("#")]),t._v(" 案例")]),r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("function splat(func) {\n   return function() {\n       return func.apply(null, _.toArray(arguments));\n   }\n}\n")])]),r("h2",{attrs:{id:"一等函数和applicative编程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一等函数和applicative编程","aria-hidden":"true"}},[t._v("#")]),t._v(" 一等函数和Applicative编程")]),r("h3",{attrs:{id:"一等函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一等函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 一等函数")]),r("ol",[r("li",[t._v('函数看做"一等公民"时，它可以去任何值可以去的地方,很少有限制。')]),r("li",[t._v("当我们使用“函数”这个词的时候,指的独立存在的函数, 而“方法”指的是在对象上下文创建出来的函数。")])]),r("h3",{attrs:{id:"applocative编程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#applocative编程","aria-hidden":"true"}},[t._v("#")]),t._v(" Applocative编程")]),r("p",[t._v("Applocative编程定义为: 函数A作为参数提供给函数B\n最典型的: map, reducer, forEach, filter。")]),r("h2",{attrs:{id:"变量作用域和闭包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#变量作用域和闭包","aria-hidden":"true"}},[t._v("#")]),t._v(" 变量作用域和闭包")]),r("ol",[r("li",[t._v("自由变量\n如果一个函数包含内部函数，那么它们都可以看到其中声明的变量, 这些变量称为“自由”变量。")])]),r("p",[t._v("自由变量可以是函数内部声明的变量, 也可以是参数。\n闭包可以捕捉自由变量,可以是任何类型,包括函数。捕捉函数(高阶函数)是构建抽象的强大技术")]),r("ol",{attrs:{start:"2"}},[r("li",[t._v("闭包")])]),r("h3",{attrs:{id:"高阶函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#高阶函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 高阶函数")]),r("ol",[r("li",[t._v("高阶函数遵循一个明确定义")])]),r("ul",[r("li",[t._v("函数是一等公民")]),r("li",[t._v("以一个函数为参数")]),r("li",[t._v("以一个函数为返回结果(惰性求值)")])]),r("ol",{attrs:{start:"2"}},[r("li",[t._v("关于传递函数的更多思考:重复,反复和条件迭代(iterateUntil)")])]),r("ul",[r("li",[t._v("下面使用函数抽象出处理方法")])]),r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("function repeatedly(times, fun) {\n    return _.map(_.range(times), fun);\n}\n\nconst abc = repeatedly(3, function() {\n    return Math.floor(Math.random() * 10) + 1;\n});\n")])]),r("ul",[r("li",[t._v("再进一步,我们使得条件也抽象出来。")])]),r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("function iterateUntil(fun, check, init) {\n    var ret = [];\n    var result = fun(init);\n    while(check(result)) {\n        ret.push(result);\n        result = fun(result);\n    }\n    return ret;\n}\n\nvar a = iterateUntil(function(n) {\n    return n + n\n}, function(n) {\n    return n <= 1024\n}, 1);\n")])]),r("ol",{attrs:{start:"3"}},[r("li",[t._v("返回其他函数的函数")])]),r("ul",[r("li",[t._v("闭包\n"),r("ul",[r("li",[t._v("首先闭包会捕获一个值(或引用),并多次返回相同的值")]),r("li",[t._v("每一个新闭包都会捕获不一样的值")])])]),r("li",[t._v("陷阱")])]),r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("var generator = {\n    count: 1,\n    uniqueString: function(prefix) {\n        return [prefix, this.count].join('');\n    }\n}\n")])]),r("p",[t._v("这里如果用户这样来使用就会出现问题:")]),r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("var uniqueString = generator.uniqueString;\nuniqueString('ceshi');\n")])]),r("h3",{attrs:{id:"由函数构建函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#由函数构建函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 由函数构建函数")]),r("ol",[r("li",[t._v("柯里化,科利华函数逐渐返回消耗参数的函数, 直到所有参数耗尽。")]),r("li",[t._v("部分应用是一个“部分”执行，等待接受剩余的参数立即执行的函数。")])]),r("h3",{attrs:{id:"curry柯里化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#curry柯里化","aria-hidden":"true"}},[t._v("#")]),t._v(" curry柯里化")]),r("ol",[r("li",[t._v("基本curry函数")])]),r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("function curryHelper(fn) {\n    var _args = Array.prototype.slice.call(arguments, 1);\n    return function() {\n        var _newArgs  = Array.prototype.slice.call(arguments);\n        var _totalArgs = _args.concat(_newArgs);\n        return  fn.apply(this, _totalArgs);\n    }\n}\n\nfunction showMsg(name, age, fruit) {\n    console.log('my name is' + name + 'i am '+age+ 'i like' + fruit);\n}\n\nconst curryShowMsg  = curryHelper(showMsg, 'yuank');\ncurryShowMsg(22, 'apple');\n")])]),r("ol",{attrs:{start:"2"}},[r("li",[r("p",[t._v("我们希望扩展为: 任意次数的调用,传递的参数不是按照顺序来传递。")])]),r("li",[r("p",[t._v("setTimeout封装场景")])])]),r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("function timer(fn, delay) {\n    setTimeout(fn ,delay)\n}\nconst curriedTimout = _.curry(timer);\nconst delay1000 = curriedTimout(_, 1000)\ndelay1000(() => console.log(2323))\n")])]),r("h3",{attrs:{id:"partial"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#partial","aria-hidden":"true"}},[t._v("#")]),t._v(" partial")]),r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("function timer(fn, delay) {\n    setTimeout(fn ,delay)\n}\nconst delay1000 = _.partial(timer, _, 1000);\ndelay1000(() => console.log(2324))\n")])]),r("h3",{attrs:{id:"三个重要的函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三个重要的函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 三个重要的函数")]),r("p",[t._v("curry\npartail\ncompose")]),r("h2",{attrs:{id:"递归"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#递归","aria-hidden":"true"}},[t._v("#")]),t._v(" 递归")]),r("ol",[r("li",[t._v("理解递归对理解函数式编程非常重要:")])]),r("ul",[r("li",[t._v("递归的解决方案包括使用对一个普通问题子集的单一抽象的使用。")]),r("li",[t._v("递归可以隐藏可变状态。")]),r("li",[t._v("递归是一种实现惰性和无限大架构的方法。")])]),r("ol",{attrs:{start:"2"}},[r("li",[t._v("myLength 接收一个数组,并返回数组的长度(TODO)")])]),r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("function myLength(ary) {\n    if(ary.length === 0 ) {\n        return 0\n    } else {\n        myLength\n    }\n}\nmyLength(_.range(10))\n")])])])}],!1,null,null,null);a.default=n.exports}}]);